#!/usr/bin/env python3
import subprocess
import os

"""
Pages Pull Script

This script pulls chnages to all repos in the 
pages.charlesreid1.XYZ folder structure 

This looks for stuff in /www/pages.charlesreid1.XYZ/htdocs
"""

SERVER_NAME_DEFAULT = '{{ server_name_default }}'
USERNAME = '{{ username }}'



# Repos must have a gh-pages branch
repo_names = '''bots/b-apollo
bots/b-captain-hook
bots/b-ginsberg
bots/b-milton
bots/boring-mind-machine
docker/d-gitea
docker/d-mediawiki
docker/d-mysql
docker/d-nginx-charlesreid1
docker/d-nginx-subdomains
docker/d-phpmyadmin
docker/d-python-files
docker/d-python-helium
charlesreid1/dont-sudo-pip
bots/embarcadero-mind-machine
charlesreid1/git-commit-ectomy
charlesreid1/git-subway-maps
charlesreid1/github-heroku-attack-rabbits
charlesreid1/how-do-i-heroku
charlesreid1/how-do-i-pandoc
charlesreid1/how-do-i-pelican
charlesreid1/how-do-i-pyenv
charlesreid1/how-do-i-snakemake
docker/pod-bots
docker/pod-charlesreid1
docker/pod-webhooks
bots/rainbow-mind-machine
bots/russian-rainbow-mind-machine
charlesreid1/scurvy-knave-theme
charlesreid1/translate-yer-docs
charlesreid1/uncle-archie
charlesreid1/wisko-manual'''.split('\n')

repo_urls = ['https://git.charlesreid1.com/%s.git'%(j) for j in repo_names]

root = '/www'
pages = 'pages.%s'%(SERVER_NAME_DEFAULT)
basedir = os.path.join(root,pages)

subprocess.call(['mkdir','-p',basedir])

for name,url in zip(repo_names,repo_urls):
    
    # ------------------
    # pages
    #
    # for a hypothetical repo "project":
    # 
    # .git dir:     /www/pages.charlesreid1.com/git.project
    # htdocs dir:     /www/pages.charlesreid1.com/htdocs/project
    
    # Step 1: pull
    # Construct the git pull command to update
    # the live htdocs directory for this project

    htdocsdir = os.path.join(basedir,"htdocs")
    gitdir = os.path.join(basedir,"git.%s"%(name))

    # git pull, respecting the
    # unusual .git/repo folder layout
    pullcmd = ['git',
               '-C', basedir,
               '--git-dir=%s'%(dotgitdir),
               '--work-tree=%s'%(htdocsdir),
               'pull','origin','gh-pages']


    print("About to pull %s using command:\n"%(name))
    print("    $ " + " ".join(clonecmd))
    print("\n")
    try:
        p = subprocess.Popen(pullcmd, stdout=subprocess.PIPE, stderr=subprocess.PIPE)
    except:
        msg = "Something went wrong with the pull command. Output:"
        msg += "\n"
        msg += p.stdout.readline()
        msg += "\n"
        msg += p.stderr.readline()
        print(msg)
    finally:
        print("Done.")

# Step 2: chown everybody
# Construct chown command
chowncmd = ['chown','-R',
            USERNAME+":"+USERNAME,
            basedir]

